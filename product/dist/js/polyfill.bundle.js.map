{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///src/Utilities.js","webpack:///src/CustomElementInternals.js","webpack:///src/CustomElementState.js","webpack:///src/DocumentConstructionObserver.js","webpack:///src/CustomElementRegistry.js","webpack:///src/Deferred.js","webpack:///src/Patch/Native.js","webpack:///src/AlreadyConstructedMarker.js","webpack:///src/Patch/Interface/ParentNode.js","webpack:///src/custom-elements.js","webpack:///src/Patch/HTMLElement.js","webpack:///src/Patch/Document.js","webpack:///src/Patch/DocumentFragment.js","webpack:///src/Patch/Node.js","webpack:///src/Patch/Element.js","webpack:///src/Patch/Interface/ChildNode.js","webpack:///./node_modules/@webcomponents/custom-elements/src/native-shim.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","reservedTagList","Set","split","isValidCustomElementName","localName","reserved","has","validForm","test","isConnected","node","nativeValue","undefined","current","__CE_isImportDocument","Document","parentNode","window","ShadowRoot","host","nextSiblingOrAncestorSibling","root","start","nextSibling","walkDeepDescendantElements","callback","visitedImports","nodeType","Node","ELEMENT_NODE","element","getAttribute","importNode","import","add","child","firstChild","shadowRoot","__CE_shadowRoot","setPropertyUnchecked","destination","constructor","CustomElementInternals","this","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","addPatch","listener","push","patchTree","patch","__CE_patched","length","connectTree","elements","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","options","upgrade","gatherElements","__CE_hasRegistry","readyState","__CE_documentLoadHandled","addEventListener","clonedVisitedImports","delete","ownerDocument","defaultView","definition","constructionStack","constructorFunction","Error","pop","e","failed","__CE_definition","attributeChangedCallback","observedAttributes","DocumentConstructionObserver","internals","doc","document","_internals","_document","_observer","MutationObserver","_handleMutations","observe","childList","subtree","disconnect","Deferred","a","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_pendingDefinitions","_documentConstructionObserver","oldValue","newValue","namespace","indexOf","mutations","addedNodes","j","define","Function","TypeError","SyntaxError","getCallback","callbackValue","adoptedCallback","setDefinition","set","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithPendingDefinitions","pendingElements","shift","pendingUpgradableElements","deferred","whenDefined","reject","prior","some","polyfillWrapFlushCallback","outer","inner","flush","Document_createElement","createElement","Document_createElementNS","createElementNS","Document_importNode","Document_prepend","Document_append","DocumentFragment_prepend","DocumentFragment","DocumentFragment_append","Node_cloneNode","cloneNode","Node_appendChild","appendChild","Node_insertBefore","insertBefore","Node_removeChild","removeChild","Node_replaceChild","replaceChild","Node_textContent","getOwnPropertyDescriptor","Element_attachShadow","Element","Element_innerHTML","Element_getAttribute","Element_setAttribute","setAttribute","Element_removeAttribute","removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_insertAdjacentHTML","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","HTMLElement_insertAdjacentHTML","$jscompDefaultExport","AlreadyConstructedMarker","Y","builtIn","appendPrependPatch","builtInMethod","arguments","flattenedNodes","connectedElements","nodes","apply","prepend","append","priorCustomElements","customElements","forcePolyfill","$jscompDefaultExport$$module$src$Patch$Native.Document_createElement.call","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement","writable","configurable","result","deep","clone","$jscompDefaultExport$$module$src$Patch$Native.Document_importNode.call","NS_HTML","$jscompDefaultExport$$module$src$Patch$Native.Document_createElementNS.call","PatchParentNode","$jscompDefaultExport$$module$src$Patch$Native.Document_prepend","$jscompDefaultExport$$module$src$Patch$Native.Document_append","PatchDocument","$jscompDefaultExport$$module$src$Patch$Native.DocumentFragment_prepend","$jscompDefaultExport$$module$src$Patch$Native.DocumentFragment_append","patch_textContent","baseDescriptor","assignedValue","TEXT_NODE","removedNodes","childNodes","childNodesLength","Array","refNode","insertedNodes","slice","$jscompDefaultExport$$module$src$Patch$Native.Node_insertBefore.call","nativeResult","nodeWasConnected","$jscompDefaultExport$$module$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$src$Patch$Native.Node_cloneNode.call","$jscompDefaultExport$$module$src$Patch$Native.Node_removeChild.call","nodeToInsert","nodeToRemove","$jscompDefaultExport$$module$src$Patch$Native.Node_replaceChild.call","nodeToInsertWasConnected","thisIsConnected","$jscompDefaultExport$$module$src$Patch$Native.Node_textContent","$jscompDefaultExport$$module$src$Patch$Native.Node_textContent.get","parts","textContent","join","createTextNode","PatchNode","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","position","wasConnected","insertedElement","patch_insertAdjacentHTML","upgradeNodesInRange","end","text","toLowerCase","marker","previousSibling","lastChild","String","$jscompDefaultExport$$module$src$Patch$Native.Element_attachShadow","init","$jscompDefaultExport$$module$src$Patch$Native.Element_attachShadow.call","$jscompDefaultExport$$module$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_innerHTML.get","innerHTML","isTemplate","content","rawElement","namespaceURI","container","$jscompDefaultExport$$module$src$Patch$Native.Element_setAttribute.call","$jscompDefaultExport$$module$src$Patch$Native.Element_getAttribute.call","$jscompDefaultExport$$module$src$Patch$Native.Element_setAttributeNS.call","$jscompDefaultExport$$module$src$Patch$Native.Element_getAttributeNS.call","$jscompDefaultExport$$module$src$Patch$Native.Element_removeAttribute.call","$jscompDefaultExport$$module$src$Patch$Native.Element_removeAttributeNS.call","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$src$Patch$Native.Element_insertAdjacentElement","console","warn","$jscompDefaultExport$$module$src$Patch$Native.HTMLElement_insertAdjacentHTML","$jscompDefaultExport$$module$src$Patch$Native.Element_insertAdjacentHTML","$jscompDefaultExport$$module$src$Patch$Native.Element_prepend","$jscompDefaultExport$$module$src$Patch$Native.Element_append","beforeAfterPatch","$jscompDefaultExport$$module$src$Patch$Native.Element_before","before","after","$jscompDefaultExport$$module$src$Patch$Native.Element_after","$jscompDefaultExport$$module$src$Patch$Native.Element_replaceWith","b","$jscompDefaultExport$$module$src$Patch$Native.Element_remove","PatchChildNode","PatchElement","Reflect","BuiltInHTMLElement","construct"],"mappings":"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","file":"js/polyfill.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nconst reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructorFunction, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node) {\n          importNode.__CE_isImportDocument = true;\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        }\n\n        if (importNode && importNode.readyState === 'complete') {\n          importNode.__CE_documentLoadHandled = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            clonedVisitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports: clonedVisitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    // Prevent elements created in documents without a browsing context from\n    // upgrading.\n    //\n    // https://html.spec.whatwg.org/multipage/custom-elements.html#look-up-a-custom-element-definition\n    //   \"If document does not have a browsing context, return null.\"\n    //\n    // https://html.spec.whatwg.org/multipage/window-object.html#dom-document-defaultview\n    //   \"The defaultView IDL attribute of the Document interface, on getting,\n    //   must return this Document's browsing context's WindowProxy object, if\n    //   this Document has an associated browsing context, or null otherwise.\"\n    const ownerDocument = element.ownerDocument;\n    if (\n      !ownerDocument.defaultView &&\n      !(ownerDocument.__CE_isImportDocument && ownerDocument.__CE_hasRegistry)\n    ) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructorFunction;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructorFunction: constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  upgrade(element) {\n    this._internals.patchAndUpgradeTree(element);\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!HTMLElement>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!HTMLElement>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = element.localName;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructorFunction;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['upgrade'] = CustomElementRegistry.prototype.upgrade;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nexport default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  DocumentFragment_prepend: window.DocumentFragment.prototype['prepend'],\n  DocumentFragment_append: window.DocumentFragment.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_insertAdjacentHTML: window.Element.prototype['insertAdjacentHTML'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n  HTMLElement_insertAdjacentHTML: window.HTMLElement.prototype['insertAdjacentHTML'],\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n * @extends AlreadyConstructedMarkerType\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function appendPrependPatch(builtInMethod) {\n    return /** @this {!Node} */ function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.prepend !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'prepend', appendPrependPatch(builtIn.prepend));\n  }\n\n  if (builtIn.append !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'append', appendPrependPatch(builtIn.append));\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchDocumentFragment from './Patch/DocumentFragment.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchDocumentFragment(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      const constructor = /** @type {!Function} */ (this.constructor);\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = /** @type {!HTMLElement} */ (Native.Document_createElement.call(document, definition.localName));\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      const toConstructElement = /** @type {!HTMLElement} */ (element);\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(toConstructElement, constructor.prototype);\n      internals.patch(toConstructElement);\n\n      return toConstructElement;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n    // Safari 9 has `writable: false` on the propertyDescriptor\n    // Make it writable so that TypeScript can patch up the\n    // constructor in the ES5 compiled code.\n    Object.defineProperty(HTMLElement.prototype, 'constructor', {\n      writable: true,\n      configurable: true,\n      enumerable: false,\n      value: HTMLElement\n    });\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = /** @type {!Node} */ (Native.Document_importNode.call(this, node, !!deep));\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructorFunction)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport Native from './Native.js';\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  PatchParentNode(internals, DocumentFragment.prototype, {\n    prepend: Native.DocumentFragment_prepend,\n    append: Native.DocumentFragment_append,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, !!deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          // `textContent = null | undefined | ''` does not result in\n          // a TextNode childNode\n          if (assignedValue != null && assignedValue !== '') {\n            Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n          }\n        },\n      });\n    });\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return /** @type {!Element} */ (\n                     Native.Node_cloneNode.call(this, true))\n              .innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          const isTemplate = (this.localName === 'template');\n          /** @type {!Node} */\n          const content = isTemplate ? (/** @type {!HTMLTemplateElement} */\n            (this)).content : this;\n          /** @type {!Element} */\n          const rawElement = Native.Document_createElementNS.call(document,\n              this.namespaceURI, this.localName);\n          rawElement.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          const container = isTemplate ?\n              /** @type {!HTMLTemplateElement} */ (rawElement).content :\n              rawElement;\n          while (container.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, container.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(position, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, position, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  function patch_insertAdjacentHTML(destination, baseMethod) {\n    /**\n     * Patches and upgrades all nodes which are siblings between `start`\n     * (inclusive) and `end` (exclusive). If `end` is `null`, then all siblings\n     * following `start` will be patched and upgraded.\n     * @param {!Node} start\n     * @param {?Node} end\n     */\n    function upgradeNodesInRange(start, end) {\n      const nodes = [];\n      for (let node = start; node !== end; node = node.nextSibling) {\n        nodes.push(node);\n      }\n      for (let i = 0; i < nodes.length; i++) {\n        internals.patchAndUpgradeTree(nodes[i]);\n      }\n    }\n\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentHTML',\n      /**\n       * @this {Element}\n       * @param {string} position\n       * @param {string} text\n       */\n      function(position, text) {\n        position = position.toLowerCase();\n\n        if (position === \"beforebegin\") {\n          const marker = this.previousSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.parentNode.firstChild), this);\n        } else if (position === \"afterbegin\") {\n          const marker = this.firstChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.firstChild), marker);\n        } else if (position === \"beforeend\") {\n          const marker = this.lastChild;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(marker || /** @type {!Node} */ (this.firstChild), null);\n        } else if (position === \"afterend\") {\n          const marker = this.nextSibling;\n          baseMethod.call(this, position, text);\n          upgradeNodesInRange(/** @type {!Node} */ (this.nextSibling), marker);\n        } else {\n          throw new SyntaxError(`The value provided (${String(position)}) is ` +\n            \"not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'.\");\n        }\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(HTMLElement.prototype, Native.HTMLElement_insertAdjacentHTML);\n  } else if (Native.Element_insertAdjacentHTML) {\n    patch_insertAdjacentHTML(Element.prototype, Native.Element_insertAdjacentHTML);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentHTML` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function beforeAfterPatch(builtInMethod) {\n    return /** @this {!Node} */ function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'before', beforeAfterPatch(builtIn.before));\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'after', beforeAfterPatch(builtIn.after));\n  }\n\n  if (builtIn.replaceWith !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'replaceWith',\n      /**\n       * @param {...(!Node|string)} nodes\n       * @this {!Node}\n       */\n      function(...nodes) {\n        /**\n         * A copy of `nodes`, with any DocumentFragment replaced by its children.\n         * @type {!Array<!Node|string>}\n         */\n        const flattenedNodes = [];\n\n        /**\n         * Elements in `nodes` that were connected before this call.\n         * @type {!Array<!Node>}\n         */\n        const connectedElements = [];\n\n        for (var i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n\n          if (node instanceof Element && Utilities.isConnected(node)) {\n            connectedElements.push(node);\n          }\n\n          if (node instanceof DocumentFragment) {\n            for (let child = node.firstChild; child; child = child.nextSibling) {\n              flattenedNodes.push(child);\n            }\n          } else {\n            flattenedNodes.push(node);\n          }\n        }\n\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.replaceWith.apply(this, nodes);\n\n        for (let i = 0; i < connectedElements.length; i++) {\n          internals.disconnectTree(connectedElements[i]);\n        }\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n          for (let i = 0; i < flattenedNodes.length; i++) {\n            const node = flattenedNodes[i];\n            if (node instanceof Element) {\n              internals.connectTree(node);\n            }\n          }\n        }\n      });\n    }\n\n  if (builtIn.remove !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'remove',\n      /** @this {!Node} */\n      function() {\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.remove.call(this);\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n        }\n      });\n  }\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This shim allows elements written in, or compiled to, ES5 to work on native\n * implementations of Custom Elements v1. It sets new.target to the value of\n * this.constructor so that the native HTMLElement constructor can access the\n * current under-construction element's definition.\n */\n(function() {\n  if (\n    // No Reflect, no classes, no need for shim because native custom elements\n    // require ES2015 classes or Reflect.\n    window.Reflect === undefined ||\n    window.customElements === undefined ||\n    // The webcomponentsjs custom elements polyfill doesn't require\n    // ES2015-compatible construction (`super()` or `Reflect.construct`).\n    window.customElements.polyfillWrapFlushCallback\n  ) {\n    return;\n  }\n  const BuiltInHTMLElement = HTMLElement;\n  window.HTMLElement = /** @this {!Object} */ function HTMLElement() {\n    return Reflect.construct(\n        BuiltInHTMLElement, [], /** @type {!Function} */ (this.constructor));\n  };\n  HTMLElement.prototype = BuiltInHTMLElement.prototype;\n  HTMLElement.prototype.constructor = HTMLElement;\n  Object.setPrototypeOf(HTMLElement, BuiltInHTMLElement);\n})();\n"],"sourceRoot":""}